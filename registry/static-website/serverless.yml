type: static-website
version: 0.0.1

inputTypes:
  name:
    type: string
    required: true
    displayName: Site Name
    description: Logical name of the site
  contentPath:
    type: string
    default: ./site
    description: Relative path of a folder for the contents of the site like './site'
  templateValues:
    type: object
    default: {}
    required: true  # problem with default value here SC-127
  contentIndex:
    type: string
    default: index.html
    description: The index page for the site like 'index.html'
  contentError:
    type: string
    default: error.html
    description: The error page for the site like 'error.html'
  hostingRegion:
    type: string
    default: us-east-1
    description: The AWS region where the site will be hosted like 'us-east-1'
  hostingDomain:
    type: string
    required: false
    default: site-${self.instanceId}.example.com
    description: The domain name for the site like 'serverless.com'
  aliasDomain:
    type: string
    required: false
    default: www.site-${self.instanceId}.example.com
    description: The alias domain for the site like 'www.serverless.com'

components:
  renderedFiles:
    type: mustache
    inputs:
      sourcePath: ${input.contentPath}
      values: ${input.templateValues}
  rootDomainBucket:
    type: aws-s3-bucket
    inputs:
      name: ${input.hostingDomain}
  rootDomainBucketPolicy:
    type: s3-policy
    inputs:
      bucketName: ${rootDomainBucket.name}
  siteContentUploader:
    type: s3-sync
    inputs:
      contentPath: ${renderedFiles.renderedFilePath}
      bucketName: ${rootDomainBucket.name}
  wwwDomainBucket:
    type: aws-s3-bucket
    inputs:
      name: ${input.aliasDomain}
  rootDomainBucketConfig:
    type: s3-website-config
    inputs:
      rootBucketName: ${rootDomainBucket.name}
      indexDocument: ${input.contentIndex}
      errorDocument: ${input.contentError}
      redirectBucketName: ${wwwDomainBucket.name}
      redirectToHostName: ${rootDomainBucket.name}
  siteCloudFrontConfig:
    type: aws-cloudfront
    inputs:
      name: ${input.name}
      defaultRootObject: ${input.contentIndex}
      originId: ${input.hostingDomain}
      originDomain: ${rootDomainBucket.name}.s3.amazonaws.com
      aliasDomain: ${input.aliasDomain}
      distributionEnabled: true
  siteRoute53Config:
    type: aws-route53
    inputs:
      name: ${input.name}-site-${self.instanceId}
      domainName: ${input.aliasDomain}
      dnsName: ${siteCloudFrontConfig.distribution.domainName}
